version: '3.8'

services:
  # PostgreSQL database for RAG evaluation metrics storage
  rag-metrics-db:
    image: postgres:16
    container_name: rag-metrics-db
    environment:
      POSTGRES_DB: rag_metrics
      POSTGRES_USER: rag_metrics_user
      POSTGRES_PASSWORD: rag_metrics_password
    ports:
      - "5433:5432"
    volumes:
      - rag_metrics_data:/var/lib/postgresql/data
      - ./rag-evaluator/init.sql:/docker-entrypoint-initdb.d/init.sql
    networks:
      - rag-eval-network
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U rag_metrics_user -d rag_metrics"]
      interval: 10s
      timeout: 5s
      retries: 5

  # RAG Evaluator Microservice
  rag-evaluator:
    build:
      context: ./rag-evaluator
      dockerfile: Containerfile
    container_name: rag-evaluator
    environment:
      - DATABASE_URL=postgresql://rag_metrics_user:rag_metrics_password@rag-metrics-db:5432/rag_metrics
      - LOG_LEVEL=INFO
      - PYTHONUNBUFFERED=1
    ports:
      - "8002:8002"
    depends_on:
      rag-metrics-db:
        condition: service_healthy
    networks:
      - rag-eval-network
    volumes:
      - ./rag-evaluator/logs:/app/logs
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:8002/health"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 30s

  # RAG Performance Dashboard
  rag-dashboard:
    build:
      context: ./rag-dashboard
      dockerfile: Containerfile
    container_name: rag-dashboard
    environment:
      - NEXT_PUBLIC_RAG_EVALUATOR_API=http://rag-evaluator:8002
      - NODE_ENV=production
    ports:
      - "3002:3002"
    depends_on:
      rag-evaluator:
        condition: service_healthy
    networks:
      - rag-eval-network
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:3002/health"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 30s

  # Nginx reverse proxy for RAG evaluation services
  rag-proxy:
    image: nginx:alpine
    container_name: rag-proxy
    ports:
      - "8080:80"
    volumes:
      - ./nginx/rag-eval.conf:/etc/nginx/conf.d/default.conf
    depends_on:
      - rag-evaluator
      - rag-dashboard
    networks:
      - rag-eval-network
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost/health"]
      interval: 30s
      timeout: 10s
      retries: 3

volumes:
  rag_metrics_data:
    driver: local

networks:
  rag-eval-network:
    driver: bridge
    name: rag-eval-network